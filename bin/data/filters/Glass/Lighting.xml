<?xml version="1.0"?>
<!DOCTYPE filter [
    <!ENTITY LightingShader PUBLIC "%root%/data/filters/Shared/Lighting.xml" "">
    <!ENTITY ComputeShader PUBLIC "%root%/data/filters/Shared/Indexed.xml" "">
]>
<filter mode="lighting">
    <defines>
        <define name="gs_nLightTileSize" value="16" />
        <define name="gs_nMaxLights" value="255" />
    </defines>

    <blend>
        <color source="one" destination="one" operation="add" />
        <alpha source="one" destination="one" operation="add" />
    </blend>
    
    <targets>
        <target name="Diffuse" format="RGBA_UINT8" clear="0,0,0,0" />
        <target name="Specular" format="RGBA_UINT8" clear="0,0,0,0" />
    </targets>

    <compute dispatch="ceil(%video.xsize%/gs_nLightTileSize),ceil(%video.ysize%/gs_nLightTileSize),1">
        <resources>
            <resource stage="0" source="Opaque/Lighting.TileIndices" unorderedaccess="true" />
            <resource stage="1" source="Opaque/Deferred.World" />
        </resources>

        &ComputeShader;
    </compute>
    
    <pixel>
        <resources>
            <resource stage="1" source="Opaque/Deferred.Albedo" />
            <resource stage="2" source="Glass/Deferred.World" />
            <resource stage="3" source="Opaque/Deferred.Info" />
            <resource stage="4" source="Opaque/Lighting.TileIndices" />
        </resources>

        &LightingShader;
        <![CDATA[
            struct OUTPUT
            {
                float4 diffuse                      : SV_TARGET0;
                float4 specular                     : SV_TARGET1;
            };

            OUTPUT MainPixelProgram(in INPUT kInput)
            {
                OUTPUT kOutput = (OUTPUT)0;
                GetLightingContribution(kInput, kOutput.diffuse.xyz, kOutput.specular.xyz);
                return kOutput;
            }
        ]]>
    </pixel>
</filter>
