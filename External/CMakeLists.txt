project (External)

set_property(GLOBAL PROPERTY FOLDER "External")

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/External")
include(FindDirectX)
include(FindWindowsSDK)

SET(BUILD_SHARED_LIBS False CACHE BOOL "" FORCE)
SET(BUILD_STATIC_LIBS True CACHE BOOL "" FORCE)

SET(OPTION_BUILD_DOCS False CACHE BOOL "" FORCE)
SET(OPTION_BUILD_EXAMPLES False CACHE BOOL "" FORCE)
SET(OPTION_BUILD_GPU_TESTS False CACHE BOOL "" FORCE)
SET(OPTION_BUILD_TESTS False CACHE BOOL "" FORCE)
add_subdirectory("glbinding")

SET(ASSIMP_BUILD_IFC_IMPORTER False CACHE BOOL "" FORCE)
SET(ASSIMP_BUILD_ASSIMP_TOOLS False CACHE BOOL "" FORCE)
SET(ASSIMP_BUILD_ASSIMP_VIEW False CACHE BOOL "" FORCE)
SET(ASSIMP_BUILD_TESTS False CACHE BOOL "" FORCE)
SET(ASSIMP_INSTALL_PDB False CACHE BOOL "" FORCE)
add_subdirectory("assimp")
target_include_directories(assimp PUBLIC "${CMAKE_CURRENT_BINARY_DIR}/assimp/include")
message("${CMAKE_CURRENT_BINARY_DIR}/assimp/include")

if(WIN32)
    project(DirectXTex)
    add_definitions(-D_OPENMP)
    file(GLOB SOURCES "DirectXTex/DirectXTex/*.cpp" "DirectXTex/DirectXTex/*.h")
    add_library(DirectXTex STATIC ${SOURCES})
    target_include_directories(DirectXTex PUBLIC "${CMAKE_CURRENT_LIST_DIR}/DirectXTex/DirectXTex")
    #add_custom_command(TARGET DirectXTex PRE_BUILD WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/DirectXTex/DirectXTex/Shaders" COMMAND "CompileShaders.cmd" )
endif()

set(NEWTON_3_14 True)

add_definitions(-D_NEWTON_STATIC_LIB -D_CUSTOM_JOINTS_STATIC_LIB -DPTW32_STATIC_LIB)

project(tinyxml)
file(GLOB SOURCES "${CMAKE_CURRENT_LIST_DIR}/newton-dynamics/packages/thirdParty/tinyxml/*.cpp" "${CMAKE_CURRENT_LIST_DIR}/newton-dynamics/packages/thirdParty/tinyxml/*.h")
add_library(tinyxml STATIC ${SOURCES})
target_include_directories(tinyxml PUBLIC "${CMAKE_CURRENT_LIST_DIR}/newton-dynamics/packages/thirdParty/tinyxml")
include_directories("${CMAKE_CURRENT_LIST_DIR}/newton-dynamics/packages/thirdParty/tinyxml")

SET(NEWTON_DEMOS_SANDBOX False CACHE BOOL "" FORCE)
add_subdirectory("newton-dynamics")

project(imgui_gek)
add_definitions(-DNO_IMGUITOOLBAR)
add_definitions(-DNO_IMGUIPANELMANAGER)
add_definitions(-DNO_IMGUISTRING)
add_definitions(-DNO_IMGUIHELPER)
add_definitions(-DNO_IMGUIFILESYSTEM)
add_definitions(-DNO_IMGUICODEEDITOR)
add_definitions(-DIMGUI_INCLUDE_IMGUI_USER_H -DIMGUI_INCLUDE_IMGUI_USER_INL)
add_definitions(-DIMGUI_DEFINE_MATH_OPERATORS -DIMGUI_DEFINE_PLACEMENT_NEW)
file(GLOB SOURCES "imgui-addons/*.cpp" "imgui-addons/*.h")
add_library(imgui_gek STATIC ${SOURCES})
target_include_directories(imgui_gek PUBLIC "${CMAKE_CURRENT_LIST_DIR}/imgui-addons")

project(signals)
add_library(signals INTERFACE)
target_include_directories(signals INTERFACE "${CMAKE_CURRENT_LIST_DIR}/lsignal")

project(jsoncons)
add_library(jsoncons INTERFACE)
target_include_directories(jsoncons INTERFACE "${CMAKE_CURRENT_LIST_DIR}/jsoncons/src")

set_property(TARGET pack PROPERTY FOLDER "External/GLBinding")
set_property(TARGET check-glmeta PROPERTY FOLDER "External/GLBinding")
set_property(TARGET glmeta PROPERTY FOLDER "External/GLBinding")
set_property(TARGET check-glbinding PROPERTY FOLDER "External/GLBinding")
set_property(TARGET pack-glbinding PROPERTY FOLDER "External/GLBinding")
set_property(TARGET glbinding PROPERTY FOLDER "External/GLBinding")
set_property(TARGET component_install PROPERTY FOLDER "External/GLBinding")

set_property(TARGET IrrXML PROPERTY FOLDER "External/Assimp")
set_property(TARGET zlibstatic PROPERTY FOLDER "External/Assimp")
set_property(TARGET assimp PROPERTY FOLDER "External/Assimp")
set_property(TARGET uninstall PROPERTY FOLDER "External/Assimp")
if(WIN32)
    set_property(TARGET UpdateAssimpLibsDebugSymbolsAndDLLs PROPERTY FOLDER "External/Assimp")
endif()

set_property(TARGET imgui PROPERTY FOLDER "External/Newton")
set_property(TARGET timeTracker PROPERTY FOLDER "External/Newton")
set_property(TARGET Newton PROPERTY FOLDER "External/Newton")
set_property(TARGET NewtonObj PROPERTY FOLDER "External/Newton")
set_property(TARGET NewtonStatic PROPERTY FOLDER "External/Newton")
set_property(TARGET tinyxml PROPERTY FOLDER "External/dNewton")
set_property(TARGET dAnimation PROPERTY FOLDER "External/dNewton")
set_property(TARGET dContainers PROPERTY FOLDER "External/dNewton")
set_property(TARGET dCustomJoints PROPERTY FOLDER "External/dNewton")
set_property(TARGET dMath PROPERTY FOLDER "External/dNewton")
set_property(TARGET dScene PROPERTY FOLDER "External/dNewton")

set_property(TARGET imgui_gek PROPERTY FOLDER "External/ImGui")

if(WIN32)
    set_property(TARGET DirectXTex PROPERTY FOLDER "External/DirectXTex")
endif()
